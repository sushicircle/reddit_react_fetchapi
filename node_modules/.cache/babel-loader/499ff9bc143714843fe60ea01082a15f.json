{"ast":null,"code":"import _classCallCheck from \"/home/mw/Downloads/reddit_react_fetchapi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mw/Downloads/reddit_react_fetchapi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mw/Downloads/reddit_react_fetchapi/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mw/Downloads/reddit_react_fetchapi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mw/Downloads/reddit_react_fetchapi/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mw/Downloads/reddit_react_fetchapi/src/Fetch/index.js\";\nimport React, { Component } from 'react';\nvar API = 'https://www.reddit.com/r/todayilearned/top.json?limit=2';\n\nvar Fetch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fetch, _Component);\n\n  function Fetch(props) {\n    var _this;\n\n    _classCallCheck(this, Fetch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Fetch).call(this, props));\n    _this.state = {\n      jsondata: [] // error: null,\n\n    };\n    return _this;\n  }\n\n  _createClass(Fetch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(API).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong ...');\n        }\n      }).then(function (res) {\n        return _this2.setState({\n          jsondata: res.data.children\n        });\n      }); // .catch(error => this.setState({ error, isLoading: false }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var jsondata = this.state.jsondata;\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, jsondata.map(function (info) {\n        return React.createElement(\"li\", {\n          key: info.data.created,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \" \", info.data.title));\n      }));\n    }\n  }]);\n\n  return Fetch;\n}(Component);\n\nexport default Fetch;","map":{"version":3,"sources":["/home/mw/Downloads/reddit_react_fetchapi/src/Fetch/index.js"],"names":["React","Component","API","Fetch","props","state","jsondata","fetch","then","response","ok","json","Error","res","setState","data","children","map","info","created","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,GAAG,GAAG,yDAAV;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD,CAEZ;;AAFY,KAAb;AAHe;AAOhB;;;;wCAEiB;AAAA;;AAChBC,MAAAA,KAAK,CAACL,GAAD,CAAL,CACCM,IADD,CACM,UAAAC,QAAQ,EAAI;AACd,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAFD,MAEO;AACL,gBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,OAPH,EAQGJ,IARH,CAQQ,UAAAK,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAAEO,GAAG,CAACE,IAAJ,CAASC;AAArB,SAAd,CAAJ;AAAA,OARX,EADgB,CAUf;AACJ;;;6BAEQ;AAAA,UACGV,QADH,GACgB,KAAKD,KADrB,CACGC,QADH;AAGT,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,QAAQ,CAACW,GAAT,CAAa,UAAAC,IAAI;AAAA,eAClB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACH,IAAL,CAAUI,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAKD,IAAI,CAACH,IAAL,CAAUK,KAAf,CADH,CADkB;AAAA,OAAjB,CADH,CADJ;AASC;;;;EAnCenB,S;;AAuCpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nvar API = 'https://www.reddit.com/r/todayilearned/top.json?limit=2';\r\n\r\nclass Fetch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            jsondata: [],\r\n         // error: null,\r\n        };\r\n      }\r\n\r\n    componentDidMount() {    \r\n        fetch(API)\r\n        .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            } else {\r\n              throw new Error('Something went wrong ...');\r\n            }\r\n          })\r\n          .then(res => this.setState({ jsondata: res.data.children}))\r\n         // .catch(error => this.setState({ error, isLoading: false }));\r\n    }\r\n\r\n    render() {\r\n        const { jsondata } = this.state;\r\n\r\n    return (\r\n        <ul>\r\n          {jsondata.map(info =>\r\n          <li key={info.data.created}>\r\n             <p> {info.data.title}</p>\r\n          </li>\r\n          )}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}